# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Imobiliaria(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, nome: str=None, endereo: str=None):  # noqa: E501
        """Imobiliaria - a model defined in Swagger

        :param id: The id of this Imobiliaria.  # noqa: E501
        :type id: int
        :param nome: The nome of this Imobiliaria.  # noqa: E501
        :type nome: str
        :param endereo: The endereo of this Imobiliaria.  # noqa: E501
        :type endereo: str
        """
        self.swagger_types = {
            'id': int,
            'nome': str,
            'endereo': str
        }

        self.attribute_map = {
            'id': 'id',
            'nome': 'nome',
            'endereo': 'endereÃ§o'
        }

        self._id = id
        self._nome = nome
        self._endereo = endereo

    @classmethod
    def from_dict(cls, dikt) -> 'Imobiliaria':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Imobiliaria of this Imobiliaria.  # noqa: E501
        :rtype: Imobiliaria
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this Imobiliaria.


        :return: The id of this Imobiliaria.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this Imobiliaria.


        :param id: The id of this Imobiliaria.
        :type id: int
        """

        self._id = id

    @property
    def nome(self) -> str:
        """Gets the nome of this Imobiliaria.


        :return: The nome of this Imobiliaria.
        :rtype: str
        """
        return self._nome

    @nome.setter
    def nome(self, nome: str):
        """Sets the nome of this Imobiliaria.


        :param nome: The nome of this Imobiliaria.
        :type nome: str
        """
        if nome is None:
            raise ValueError("Invalid value for `nome`, must not be `None`")  # noqa: E501
        if nome is not None and len(nome) > 100:
            raise ValueError("Invalid value for `nome`, length must be less than or equal to `100`")  # noqa: E501

        self._nome = nome

    @property
    def endereo(self) -> str:
        """Gets the endereo of this Imobiliaria.


        :return: The endereo of this Imobiliaria.
        :rtype: str
        """
        return self._endereo

    @endereo.setter
    def endereo(self, endereo: str):
        """Sets the endereo of this Imobiliaria.


        :param endereo: The endereo of this Imobiliaria.
        :type endereo: str
        """
        if endereo is not None and len(endereo) > 250:
            raise ValueError("Invalid value for `endereo`, length must be less than or equal to `250`")  # noqa: E501

        self._endereo = endereo
